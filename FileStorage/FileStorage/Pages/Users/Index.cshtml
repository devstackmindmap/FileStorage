@page
<!-- The page Razor directive makes the file an MVC action, which means that it can handle requests. 
page must be the first Razor directive on a page. 
page and model are examples of transitioning into Razor-specific markup. 
See Razor syntax for more information. -->

<!-- The model directive specifies the type of the model passed to the Razor Page. -->
@model FileStorage.Pages.Users.IndexModel

@{
    // an example of Razor transitioning into C#. The { and } characters enclose a block of C# code.
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].RegistDt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.User) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegistDt)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
